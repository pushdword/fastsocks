// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: auth_struct.proto

#ifndef PROTOBUF_auth_5fstruct_2eproto__INCLUDED
#define PROTOBUF_auth_5fstruct_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_auth_5fstruct_2eproto();
void protobuf_AssignDesc_auth_5fstruct_2eproto();
void protobuf_ShutdownFile_auth_5fstruct_2eproto();

class authenticate_acknowledgement;
class authenticate_response;
class authenticate_solicitation;
class connection_acknowledgement;
class connection_response;
class connection_solicitation;
class register_response;
class register_solicitation;

// ===================================================================

class authenticate_solicitation : public ::google::protobuf::Message {
 public:
  authenticate_solicitation();
  virtual ~authenticate_solicitation();

  authenticate_solicitation(const authenticate_solicitation& from);

  inline authenticate_solicitation& operator=(const authenticate_solicitation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const authenticate_solicitation& default_instance();

  void Swap(authenticate_solicitation* other);

  // implements Message ----------------------------------------------

  inline authenticate_solicitation* New() const { return New(NULL); }

  authenticate_solicitation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const authenticate_solicitation& from);
  void MergeFrom(const authenticate_solicitation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(authenticate_solicitation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  ::google::protobuf::int32 header() const;
  void set_header(::google::protobuf::int32 value);

  // optional string usr = 2;
  bool has_usr() const;
  void clear_usr();
  static const int kUsrFieldNumber = 2;
  const ::std::string& usr() const;
  void set_usr(const ::std::string& value);
  void set_usr(const char* value);
  void set_usr(const char* value, size_t size);
  ::std::string* mutable_usr();
  ::std::string* release_usr();
  void set_allocated_usr(::std::string* usr);

  // optional string pw = 3;
  bool has_pw() const;
  void clear_pw();
  static const int kPwFieldNumber = 3;
  const ::std::string& pw() const;
  void set_pw(const ::std::string& value);
  void set_pw(const char* value);
  void set_pw(const char* value, size_t size);
  ::std::string* mutable_pw();
  ::std::string* release_pw();
  void set_allocated_pw(::std::string* pw);

  // @@protoc_insertion_point(class_scope:authenticate_solicitation)
 private:
  inline void set_has_header();
  inline void clear_has_header();
  inline void set_has_usr();
  inline void clear_has_usr();
  inline void set_has_pw();
  inline void clear_has_pw();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr usr_;
  ::google::protobuf::internal::ArenaStringPtr pw_;
  ::google::protobuf::int32 header_;
  friend void  protobuf_AddDesc_auth_5fstruct_2eproto();
  friend void protobuf_AssignDesc_auth_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_auth_5fstruct_2eproto();

  void InitAsDefaultInstance();
  static authenticate_solicitation* default_instance_;
};
// -------------------------------------------------------------------

class authenticate_response : public ::google::protobuf::Message {
 public:
  authenticate_response();
  virtual ~authenticate_response();

  authenticate_response(const authenticate_response& from);

  inline authenticate_response& operator=(const authenticate_response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const authenticate_response& default_instance();

  void Swap(authenticate_response* other);

  // implements Message ----------------------------------------------

  inline authenticate_response* New() const { return New(NULL); }

  authenticate_response* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const authenticate_response& from);
  void MergeFrom(const authenticate_response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(authenticate_response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  ::google::protobuf::int32 header() const;
  void set_header(::google::protobuf::int32 value);

  // optional string token = 2;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:authenticate_response)
 private:
  inline void set_has_header();
  inline void clear_has_header();
  inline void set_has_token();
  inline void clear_has_token();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::int32 header_;
  friend void  protobuf_AddDesc_auth_5fstruct_2eproto();
  friend void protobuf_AssignDesc_auth_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_auth_5fstruct_2eproto();

  void InitAsDefaultInstance();
  static authenticate_response* default_instance_;
};
// -------------------------------------------------------------------

class authenticate_acknowledgement : public ::google::protobuf::Message {
 public:
  authenticate_acknowledgement();
  virtual ~authenticate_acknowledgement();

  authenticate_acknowledgement(const authenticate_acknowledgement& from);

  inline authenticate_acknowledgement& operator=(const authenticate_acknowledgement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const authenticate_acknowledgement& default_instance();

  void Swap(authenticate_acknowledgement* other);

  // implements Message ----------------------------------------------

  inline authenticate_acknowledgement* New() const { return New(NULL); }

  authenticate_acknowledgement* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const authenticate_acknowledgement& from);
  void MergeFrom(const authenticate_acknowledgement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(authenticate_acknowledgement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  ::google::protobuf::int32 header() const;
  void set_header(::google::protobuf::int32 value);

  // optional string token = 2;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:authenticate_acknowledgement)
 private:
  inline void set_has_header();
  inline void clear_has_header();
  inline void set_has_token();
  inline void clear_has_token();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::int32 header_;
  friend void  protobuf_AddDesc_auth_5fstruct_2eproto();
  friend void protobuf_AssignDesc_auth_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_auth_5fstruct_2eproto();

  void InitAsDefaultInstance();
  static authenticate_acknowledgement* default_instance_;
};
// -------------------------------------------------------------------

class register_solicitation : public ::google::protobuf::Message {
 public:
  register_solicitation();
  virtual ~register_solicitation();

  register_solicitation(const register_solicitation& from);

  inline register_solicitation& operator=(const register_solicitation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const register_solicitation& default_instance();

  void Swap(register_solicitation* other);

  // implements Message ----------------------------------------------

  inline register_solicitation* New() const { return New(NULL); }

  register_solicitation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const register_solicitation& from);
  void MergeFrom(const register_solicitation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(register_solicitation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  ::google::protobuf::int32 header() const;
  void set_header(::google::protobuf::int32 value);

  // optional string token = 2;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:register_solicitation)
 private:
  inline void set_has_header();
  inline void clear_has_header();
  inline void set_has_token();
  inline void clear_has_token();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::int32 header_;
  friend void  protobuf_AddDesc_auth_5fstruct_2eproto();
  friend void protobuf_AssignDesc_auth_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_auth_5fstruct_2eproto();

  void InitAsDefaultInstance();
  static register_solicitation* default_instance_;
};
// -------------------------------------------------------------------

class register_response : public ::google::protobuf::Message {
 public:
  register_response();
  virtual ~register_response();

  register_response(const register_response& from);

  inline register_response& operator=(const register_response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const register_response& default_instance();

  void Swap(register_response* other);

  // implements Message ----------------------------------------------

  inline register_response* New() const { return New(NULL); }

  register_response* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const register_response& from);
  void MergeFrom(const register_response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(register_response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  ::google::protobuf::int32 header() const;
  void set_header(::google::protobuf::int32 value);

  // optional string token = 2;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // optional string regnr = 3;
  bool has_regnr() const;
  void clear_regnr();
  static const int kRegnrFieldNumber = 3;
  const ::std::string& regnr() const;
  void set_regnr(const ::std::string& value);
  void set_regnr(const char* value);
  void set_regnr(const char* value, size_t size);
  ::std::string* mutable_regnr();
  ::std::string* release_regnr();
  void set_allocated_regnr(::std::string* regnr);

  // @@protoc_insertion_point(class_scope:register_response)
 private:
  inline void set_has_header();
  inline void clear_has_header();
  inline void set_has_token();
  inline void clear_has_token();
  inline void set_has_regnr();
  inline void clear_has_regnr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr regnr_;
  ::google::protobuf::int32 header_;
  friend void  protobuf_AddDesc_auth_5fstruct_2eproto();
  friend void protobuf_AssignDesc_auth_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_auth_5fstruct_2eproto();

  void InitAsDefaultInstance();
  static register_response* default_instance_;
};
// -------------------------------------------------------------------

class connection_solicitation : public ::google::protobuf::Message {
 public:
  connection_solicitation();
  virtual ~connection_solicitation();

  connection_solicitation(const connection_solicitation& from);

  inline connection_solicitation& operator=(const connection_solicitation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const connection_solicitation& default_instance();

  void Swap(connection_solicitation* other);

  // implements Message ----------------------------------------------

  inline connection_solicitation* New() const { return New(NULL); }

  connection_solicitation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const connection_solicitation& from);
  void MergeFrom(const connection_solicitation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(connection_solicitation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  ::google::protobuf::int32 header() const;
  void set_header(::google::protobuf::int32 value);

  // optional string token = 2;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // optional string regnr = 3;
  bool has_regnr() const;
  void clear_regnr();
  static const int kRegnrFieldNumber = 3;
  const ::std::string& regnr() const;
  void set_regnr(const ::std::string& value);
  void set_regnr(const char* value);
  void set_regnr(const char* value, size_t size);
  ::std::string* mutable_regnr();
  ::std::string* release_regnr();
  void set_allocated_regnr(::std::string* regnr);

  // @@protoc_insertion_point(class_scope:connection_solicitation)
 private:
  inline void set_has_header();
  inline void clear_has_header();
  inline void set_has_token();
  inline void clear_has_token();
  inline void set_has_regnr();
  inline void clear_has_regnr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr regnr_;
  ::google::protobuf::int32 header_;
  friend void  protobuf_AddDesc_auth_5fstruct_2eproto();
  friend void protobuf_AssignDesc_auth_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_auth_5fstruct_2eproto();

  void InitAsDefaultInstance();
  static connection_solicitation* default_instance_;
};
// -------------------------------------------------------------------

class connection_response : public ::google::protobuf::Message {
 public:
  connection_response();
  virtual ~connection_response();

  connection_response(const connection_response& from);

  inline connection_response& operator=(const connection_response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const connection_response& default_instance();

  void Swap(connection_response* other);

  // implements Message ----------------------------------------------

  inline connection_response* New() const { return New(NULL); }

  connection_response* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const connection_response& from);
  void MergeFrom(const connection_response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(connection_response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  ::google::protobuf::int32 header() const;
  void set_header(::google::protobuf::int32 value);

  // optional uint32 ip = 2;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  ::google::protobuf::uint32 ip() const;
  void set_ip(::google::protobuf::uint32 value);

  // optional uint32 port = 3;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 3;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:connection_response)
 private:
  inline void set_has_header();
  inline void clear_has_header();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 header_;
  ::google::protobuf::uint32 ip_;
  ::google::protobuf::uint32 port_;
  friend void  protobuf_AddDesc_auth_5fstruct_2eproto();
  friend void protobuf_AssignDesc_auth_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_auth_5fstruct_2eproto();

  void InitAsDefaultInstance();
  static connection_response* default_instance_;
};
// -------------------------------------------------------------------

class connection_acknowledgement : public ::google::protobuf::Message {
 public:
  connection_acknowledgement();
  virtual ~connection_acknowledgement();

  connection_acknowledgement(const connection_acknowledgement& from);

  inline connection_acknowledgement& operator=(const connection_acknowledgement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const connection_acknowledgement& default_instance();

  void Swap(connection_acknowledgement* other);

  // implements Message ----------------------------------------------

  inline connection_acknowledgement* New() const { return New(NULL); }

  connection_acknowledgement* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const connection_acknowledgement& from);
  void MergeFrom(const connection_acknowledgement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(connection_acknowledgement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  ::google::protobuf::int32 header() const;
  void set_header(::google::protobuf::int32 value);

  // optional string token = 2;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // optional uint32 ip = 3;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 3;
  ::google::protobuf::uint32 ip() const;
  void set_ip(::google::protobuf::uint32 value);

  // optional uint32 port = 4;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:connection_acknowledgement)
 private:
  inline void set_has_header();
  inline void clear_has_header();
  inline void set_has_token();
  inline void clear_has_token();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::int32 header_;
  ::google::protobuf::uint32 ip_;
  ::google::protobuf::uint32 port_;
  friend void  protobuf_AddDesc_auth_5fstruct_2eproto();
  friend void protobuf_AssignDesc_auth_5fstruct_2eproto();
  friend void protobuf_ShutdownFile_auth_5fstruct_2eproto();

  void InitAsDefaultInstance();
  static connection_acknowledgement* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// authenticate_solicitation

// optional int32 header = 1;
inline bool authenticate_solicitation::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void authenticate_solicitation::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void authenticate_solicitation::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void authenticate_solicitation::clear_header() {
  header_ = 0;
  clear_has_header();
}
inline ::google::protobuf::int32 authenticate_solicitation::header() const {
  // @@protoc_insertion_point(field_get:authenticate_solicitation.header)
  return header_;
}
inline void authenticate_solicitation::set_header(::google::protobuf::int32 value) {
  set_has_header();
  header_ = value;
  // @@protoc_insertion_point(field_set:authenticate_solicitation.header)
}

// optional string usr = 2;
inline bool authenticate_solicitation::has_usr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void authenticate_solicitation::set_has_usr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void authenticate_solicitation::clear_has_usr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void authenticate_solicitation::clear_usr() {
  usr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_usr();
}
inline const ::std::string& authenticate_solicitation::usr() const {
  // @@protoc_insertion_point(field_get:authenticate_solicitation.usr)
  return usr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void authenticate_solicitation::set_usr(const ::std::string& value) {
  set_has_usr();
  usr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:authenticate_solicitation.usr)
}
inline void authenticate_solicitation::set_usr(const char* value) {
  set_has_usr();
  usr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:authenticate_solicitation.usr)
}
inline void authenticate_solicitation::set_usr(const char* value, size_t size) {
  set_has_usr();
  usr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:authenticate_solicitation.usr)
}
inline ::std::string* authenticate_solicitation::mutable_usr() {
  set_has_usr();
  // @@protoc_insertion_point(field_mutable:authenticate_solicitation.usr)
  return usr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* authenticate_solicitation::release_usr() {
  clear_has_usr();
  return usr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void authenticate_solicitation::set_allocated_usr(::std::string* usr) {
  if (usr != NULL) {
    set_has_usr();
  } else {
    clear_has_usr();
  }
  usr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), usr);
  // @@protoc_insertion_point(field_set_allocated:authenticate_solicitation.usr)
}

// optional string pw = 3;
inline bool authenticate_solicitation::has_pw() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void authenticate_solicitation::set_has_pw() {
  _has_bits_[0] |= 0x00000004u;
}
inline void authenticate_solicitation::clear_has_pw() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void authenticate_solicitation::clear_pw() {
  pw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pw();
}
inline const ::std::string& authenticate_solicitation::pw() const {
  // @@protoc_insertion_point(field_get:authenticate_solicitation.pw)
  return pw_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void authenticate_solicitation::set_pw(const ::std::string& value) {
  set_has_pw();
  pw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:authenticate_solicitation.pw)
}
inline void authenticate_solicitation::set_pw(const char* value) {
  set_has_pw();
  pw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:authenticate_solicitation.pw)
}
inline void authenticate_solicitation::set_pw(const char* value, size_t size) {
  set_has_pw();
  pw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:authenticate_solicitation.pw)
}
inline ::std::string* authenticate_solicitation::mutable_pw() {
  set_has_pw();
  // @@protoc_insertion_point(field_mutable:authenticate_solicitation.pw)
  return pw_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* authenticate_solicitation::release_pw() {
  clear_has_pw();
  return pw_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void authenticate_solicitation::set_allocated_pw(::std::string* pw) {
  if (pw != NULL) {
    set_has_pw();
  } else {
    clear_has_pw();
  }
  pw_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pw);
  // @@protoc_insertion_point(field_set_allocated:authenticate_solicitation.pw)
}

// -------------------------------------------------------------------

// authenticate_response

// optional int32 header = 1;
inline bool authenticate_response::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void authenticate_response::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void authenticate_response::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void authenticate_response::clear_header() {
  header_ = 0;
  clear_has_header();
}
inline ::google::protobuf::int32 authenticate_response::header() const {
  // @@protoc_insertion_point(field_get:authenticate_response.header)
  return header_;
}
inline void authenticate_response::set_header(::google::protobuf::int32 value) {
  set_has_header();
  header_ = value;
  // @@protoc_insertion_point(field_set:authenticate_response.header)
}

// optional string token = 2;
inline bool authenticate_response::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void authenticate_response::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void authenticate_response::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void authenticate_response::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
inline const ::std::string& authenticate_response::token() const {
  // @@protoc_insertion_point(field_get:authenticate_response.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void authenticate_response::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:authenticate_response.token)
}
inline void authenticate_response::set_token(const char* value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:authenticate_response.token)
}
inline void authenticate_response::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:authenticate_response.token)
}
inline ::std::string* authenticate_response::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:authenticate_response.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* authenticate_response::release_token() {
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void authenticate_response::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:authenticate_response.token)
}

// -------------------------------------------------------------------

// authenticate_acknowledgement

// optional int32 header = 1;
inline bool authenticate_acknowledgement::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void authenticate_acknowledgement::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void authenticate_acknowledgement::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void authenticate_acknowledgement::clear_header() {
  header_ = 0;
  clear_has_header();
}
inline ::google::protobuf::int32 authenticate_acknowledgement::header() const {
  // @@protoc_insertion_point(field_get:authenticate_acknowledgement.header)
  return header_;
}
inline void authenticate_acknowledgement::set_header(::google::protobuf::int32 value) {
  set_has_header();
  header_ = value;
  // @@protoc_insertion_point(field_set:authenticate_acknowledgement.header)
}

// optional string token = 2;
inline bool authenticate_acknowledgement::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void authenticate_acknowledgement::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void authenticate_acknowledgement::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void authenticate_acknowledgement::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
inline const ::std::string& authenticate_acknowledgement::token() const {
  // @@protoc_insertion_point(field_get:authenticate_acknowledgement.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void authenticate_acknowledgement::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:authenticate_acknowledgement.token)
}
inline void authenticate_acknowledgement::set_token(const char* value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:authenticate_acknowledgement.token)
}
inline void authenticate_acknowledgement::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:authenticate_acknowledgement.token)
}
inline ::std::string* authenticate_acknowledgement::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:authenticate_acknowledgement.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* authenticate_acknowledgement::release_token() {
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void authenticate_acknowledgement::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:authenticate_acknowledgement.token)
}

// -------------------------------------------------------------------

// register_solicitation

// optional int32 header = 1;
inline bool register_solicitation::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void register_solicitation::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void register_solicitation::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void register_solicitation::clear_header() {
  header_ = 0;
  clear_has_header();
}
inline ::google::protobuf::int32 register_solicitation::header() const {
  // @@protoc_insertion_point(field_get:register_solicitation.header)
  return header_;
}
inline void register_solicitation::set_header(::google::protobuf::int32 value) {
  set_has_header();
  header_ = value;
  // @@protoc_insertion_point(field_set:register_solicitation.header)
}

// optional string token = 2;
inline bool register_solicitation::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void register_solicitation::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void register_solicitation::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void register_solicitation::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
inline const ::std::string& register_solicitation::token() const {
  // @@protoc_insertion_point(field_get:register_solicitation.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void register_solicitation::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:register_solicitation.token)
}
inline void register_solicitation::set_token(const char* value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:register_solicitation.token)
}
inline void register_solicitation::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:register_solicitation.token)
}
inline ::std::string* register_solicitation::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:register_solicitation.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* register_solicitation::release_token() {
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void register_solicitation::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:register_solicitation.token)
}

// -------------------------------------------------------------------

// register_response

// optional int32 header = 1;
inline bool register_response::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void register_response::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void register_response::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void register_response::clear_header() {
  header_ = 0;
  clear_has_header();
}
inline ::google::protobuf::int32 register_response::header() const {
  // @@protoc_insertion_point(field_get:register_response.header)
  return header_;
}
inline void register_response::set_header(::google::protobuf::int32 value) {
  set_has_header();
  header_ = value;
  // @@protoc_insertion_point(field_set:register_response.header)
}

// optional string token = 2;
inline bool register_response::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void register_response::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void register_response::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void register_response::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
inline const ::std::string& register_response::token() const {
  // @@protoc_insertion_point(field_get:register_response.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void register_response::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:register_response.token)
}
inline void register_response::set_token(const char* value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:register_response.token)
}
inline void register_response::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:register_response.token)
}
inline ::std::string* register_response::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:register_response.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* register_response::release_token() {
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void register_response::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:register_response.token)
}

// optional string regnr = 3;
inline bool register_response::has_regnr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void register_response::set_has_regnr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void register_response::clear_has_regnr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void register_response::clear_regnr() {
  regnr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_regnr();
}
inline const ::std::string& register_response::regnr() const {
  // @@protoc_insertion_point(field_get:register_response.regnr)
  return regnr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void register_response::set_regnr(const ::std::string& value) {
  set_has_regnr();
  regnr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:register_response.regnr)
}
inline void register_response::set_regnr(const char* value) {
  set_has_regnr();
  regnr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:register_response.regnr)
}
inline void register_response::set_regnr(const char* value, size_t size) {
  set_has_regnr();
  regnr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:register_response.regnr)
}
inline ::std::string* register_response::mutable_regnr() {
  set_has_regnr();
  // @@protoc_insertion_point(field_mutable:register_response.regnr)
  return regnr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* register_response::release_regnr() {
  clear_has_regnr();
  return regnr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void register_response::set_allocated_regnr(::std::string* regnr) {
  if (regnr != NULL) {
    set_has_regnr();
  } else {
    clear_has_regnr();
  }
  regnr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regnr);
  // @@protoc_insertion_point(field_set_allocated:register_response.regnr)
}

// -------------------------------------------------------------------

// connection_solicitation

// optional int32 header = 1;
inline bool connection_solicitation::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void connection_solicitation::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void connection_solicitation::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void connection_solicitation::clear_header() {
  header_ = 0;
  clear_has_header();
}
inline ::google::protobuf::int32 connection_solicitation::header() const {
  // @@protoc_insertion_point(field_get:connection_solicitation.header)
  return header_;
}
inline void connection_solicitation::set_header(::google::protobuf::int32 value) {
  set_has_header();
  header_ = value;
  // @@protoc_insertion_point(field_set:connection_solicitation.header)
}

// optional string token = 2;
inline bool connection_solicitation::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void connection_solicitation::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void connection_solicitation::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void connection_solicitation::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
inline const ::std::string& connection_solicitation::token() const {
  // @@protoc_insertion_point(field_get:connection_solicitation.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void connection_solicitation::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:connection_solicitation.token)
}
inline void connection_solicitation::set_token(const char* value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:connection_solicitation.token)
}
inline void connection_solicitation::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:connection_solicitation.token)
}
inline ::std::string* connection_solicitation::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:connection_solicitation.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* connection_solicitation::release_token() {
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void connection_solicitation::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:connection_solicitation.token)
}

// optional string regnr = 3;
inline bool connection_solicitation::has_regnr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void connection_solicitation::set_has_regnr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void connection_solicitation::clear_has_regnr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void connection_solicitation::clear_regnr() {
  regnr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_regnr();
}
inline const ::std::string& connection_solicitation::regnr() const {
  // @@protoc_insertion_point(field_get:connection_solicitation.regnr)
  return regnr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void connection_solicitation::set_regnr(const ::std::string& value) {
  set_has_regnr();
  regnr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:connection_solicitation.regnr)
}
inline void connection_solicitation::set_regnr(const char* value) {
  set_has_regnr();
  regnr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:connection_solicitation.regnr)
}
inline void connection_solicitation::set_regnr(const char* value, size_t size) {
  set_has_regnr();
  regnr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:connection_solicitation.regnr)
}
inline ::std::string* connection_solicitation::mutable_regnr() {
  set_has_regnr();
  // @@protoc_insertion_point(field_mutable:connection_solicitation.regnr)
  return regnr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* connection_solicitation::release_regnr() {
  clear_has_regnr();
  return regnr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void connection_solicitation::set_allocated_regnr(::std::string* regnr) {
  if (regnr != NULL) {
    set_has_regnr();
  } else {
    clear_has_regnr();
  }
  regnr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regnr);
  // @@protoc_insertion_point(field_set_allocated:connection_solicitation.regnr)
}

// -------------------------------------------------------------------

// connection_response

// optional int32 header = 1;
inline bool connection_response::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void connection_response::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void connection_response::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void connection_response::clear_header() {
  header_ = 0;
  clear_has_header();
}
inline ::google::protobuf::int32 connection_response::header() const {
  // @@protoc_insertion_point(field_get:connection_response.header)
  return header_;
}
inline void connection_response::set_header(::google::protobuf::int32 value) {
  set_has_header();
  header_ = value;
  // @@protoc_insertion_point(field_set:connection_response.header)
}

// optional uint32 ip = 2;
inline bool connection_response::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void connection_response::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void connection_response::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void connection_response::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
inline ::google::protobuf::uint32 connection_response::ip() const {
  // @@protoc_insertion_point(field_get:connection_response.ip)
  return ip_;
}
inline void connection_response::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
  // @@protoc_insertion_point(field_set:connection_response.ip)
}

// optional uint32 port = 3;
inline bool connection_response::has_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void connection_response::set_has_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void connection_response::clear_has_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void connection_response::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 connection_response::port() const {
  // @@protoc_insertion_point(field_get:connection_response.port)
  return port_;
}
inline void connection_response::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:connection_response.port)
}

// -------------------------------------------------------------------

// connection_acknowledgement

// optional int32 header = 1;
inline bool connection_acknowledgement::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void connection_acknowledgement::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void connection_acknowledgement::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void connection_acknowledgement::clear_header() {
  header_ = 0;
  clear_has_header();
}
inline ::google::protobuf::int32 connection_acknowledgement::header() const {
  // @@protoc_insertion_point(field_get:connection_acknowledgement.header)
  return header_;
}
inline void connection_acknowledgement::set_header(::google::protobuf::int32 value) {
  set_has_header();
  header_ = value;
  // @@protoc_insertion_point(field_set:connection_acknowledgement.header)
}

// optional string token = 2;
inline bool connection_acknowledgement::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void connection_acknowledgement::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void connection_acknowledgement::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void connection_acknowledgement::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
inline const ::std::string& connection_acknowledgement::token() const {
  // @@protoc_insertion_point(field_get:connection_acknowledgement.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void connection_acknowledgement::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:connection_acknowledgement.token)
}
inline void connection_acknowledgement::set_token(const char* value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:connection_acknowledgement.token)
}
inline void connection_acknowledgement::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:connection_acknowledgement.token)
}
inline ::std::string* connection_acknowledgement::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:connection_acknowledgement.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* connection_acknowledgement::release_token() {
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void connection_acknowledgement::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:connection_acknowledgement.token)
}

// optional uint32 ip = 3;
inline bool connection_acknowledgement::has_ip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void connection_acknowledgement::set_has_ip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void connection_acknowledgement::clear_has_ip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void connection_acknowledgement::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
inline ::google::protobuf::uint32 connection_acknowledgement::ip() const {
  // @@protoc_insertion_point(field_get:connection_acknowledgement.ip)
  return ip_;
}
inline void connection_acknowledgement::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
  // @@protoc_insertion_point(field_set:connection_acknowledgement.ip)
}

// optional uint32 port = 4;
inline bool connection_acknowledgement::has_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void connection_acknowledgement::set_has_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void connection_acknowledgement::clear_has_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void connection_acknowledgement::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 connection_acknowledgement::port() const {
  // @@protoc_insertion_point(field_get:connection_acknowledgement.port)
  return port_;
}
inline void connection_acknowledgement::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:connection_acknowledgement.port)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_auth_5fstruct_2eproto__INCLUDED
